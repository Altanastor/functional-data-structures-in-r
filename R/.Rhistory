library(microbenchmark)
?microbenchmark
source('~/Dropbox/Misc. writing/Books/Advanced Statistical Programming in R/Functional Data Structures in R/R/list-set.R', echo=TRUE)
get_performance(100, setup(empty_list_set()))
source('~/.active-rstudio-document', echo=TRUE)
get_performance(100, setup(empty_list_set()), evaluate)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
get_performance("list()", 100, setup(empty_list_set()), evaluate)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
performance
ggplot(performance, aes(x = n, y = time, fill = algo)) +
geom_boxplot()
library(ggplot2)
ggplot(performance, aes(x = n, y = time, fill = algo)) +
geom_boxplot()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() + scale_fill_grey()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() + scale_fill_grey("Algorithm")
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() + scale_fill_grey("Data structure") + xlab(quote(n))
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() + scale_fill_grey("Data structure") + scale_shape_discrete() +
xlab(quote(n)) + ylab("Time (sec)")
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() + scale_fill_grey("Data structure") + scale_shape_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_bw()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() + scale_fill_grey("Data structure") + scale_shape_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, shape = algo)) +
geom_boxplot() + scale_fill_grey("Data structure") + scale_shape_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, shape = algo)) +
geom_boxplot() + scale_fill_grey("Data structure") + scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, color = algo)) +
geom_boxplot() + scale_fill_grey("Data structure") + scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ns <- seq(500, 1000, by = 100)
performance <- rbind(get_performance("list()", ns, setup(empty_list_set()), evaluate),
get_performance("linked list", ns, setup(empty_linked_list_set()), evaluate))
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, color = algo)) +
geom_boxplot() + scale_fill_grey("Data structure") + s#cale_color_discrete() +
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, color = algo)) +
geom_boxplot() + scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, shape = algo)) +
geom_boxplot() + scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, shape = algo)) +
geom_point() +
geom_boxplot() + scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, shape = algo)) +
geom_point() +
#geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, shape = algo)) +
geom_point("Data structure") +
#geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, shape = algo)) +
geom_point() +
#geom_boxplot() +
#scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = jitter(as.factor(n)), y = time, fill = algo, shape = algo)) +
geom_point() +
#geom_boxplot() +
#scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, shape = algo)) +
geom_point() +
#geom_boxplot() +
#scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
?geom_point
source('~/.active-rstudio-document', echo=TRUE)
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, shape = algo)) +
#geom_jitter() +
geom_boxplot() +
#scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, shape = algo)) +
#geom_jitter() +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ns <- seq(100, 1000, by = 100)
performance <- rbind(get_performance("list()", ns, setup(empty_list_set()), evaluate),
get_performance("linked list", ns, setup(empty_linked_list_set()), evaluate))
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo, shape = algo)) +
#geom_jitter() +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time / n, fill = algo, shape = algo)) +
#geom_jitter() +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time / n**2, fill = algo, shape = algo)) +
#geom_jitter() +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ns <- seq(100, 10000, by = 100)
performance <- rbind(get_performance("list()", ns, setup(empty_list_set()), evaluate),
get_performance("linked list", ns, setup(empty_linked_list_set()), evaluate))
source('~/.active-rstudio-document', echo=TRUE)
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ns <- seq(1000, 5000, by = 500)
performance <- rbind(get_performance("list()", ns, setup(empty_list_set()), evaluate),
get_performance("linked list", ns, setup(empty_linked_list_set()), evaluate))
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time / n, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time / n") + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time / n**2, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab(expression(Time / n**2)) + theme_minimal()
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggsave("set-comparison-direct.pdf")
ggplot(performance, aes(x = as.factor(n), y = time / n, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time / n") + theme_minimal()
ggsave("set-comparison-div-n.pdf")
ggplot(performance, aes(x = as.factor(n), y = time / n**2, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab(expression(Time / n**2)) + theme_minimal()
ggsave("set-comparison-div-n-squared.pdf")
?ggsave
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggsave("set-comparison-direct.pdf", width = 5, height = 5, units = "cm")
ggsave("set-comparison-direct.pdf", width = 10, height = 10, units = "cm")
ggsave("set-comparison-direct.pdf", width = 15, height = 10, units = "cm")
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggsave("set-comparison-direct.pdf", width = 15, height = 10, units = "cm")
ggplot(performance, aes(x = as.factor(n), y = time / n, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time / n") + theme_minimal()
ggsave("set-comparison-div-n.pdf", width = 15, height = 10, units = "cm")
ggplot(performance, aes(x = as.factor(n), y = time / n**2, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab(expression(Time / n**2)) + theme_minimal()
ggsave("set-comparison-div-n-squared.pdf", width = 15, height = 10, units = "cm")
ggplot(performance, aes(x = as.factor(n), y = time, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") +
xlab(quote(n)) + ylab("Time (sec)") + theme_minimal()
ggsave("set-comparison-direct.pdf", width = 15, height = 10, units = "cm")
ggsave("set-comparison-direct.png", width = 15, height = 10, units = "cm")
ggplot(performance, aes(x = as.factor(n), y = time / n, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time / n") + theme_minimal()
ggsave("set-comparison-div-n.pdf", width = 15, height = 10, units = "cm")
ggsave("set-comparison-div-n.png", width = 15, height = 10, units = "cm")
ggplot(performance, aes(x = as.factor(n), y = time / n**2, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab(expression(Time / n**2)) + theme_minimal()
ggsave("set-comparison-div-n-squared.pdf", width = 15, height = 10, units = "cm")
ggsave("set-comparison-div-n-squared.png", width = 15, height = 10, units = "cm")
source('~/Dropbox/Misc. writing/Books/Advanced Statistical Programming in R/Functional Data Structures in R/R/performance.R', echo=TRUE)
ggplot(performance, aes(x = as.factor(n), y = time / n, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time / n") + theme_minimal()
ns <- seq(5000, 10000, by = 1000)
performance <- rbind(get_performance("list()", ns, setup(empty_list_set()), evaluate),
get_performance("linked list", ns, setup(empty_linked_list_set()), evaluate))
ggplot(performance, aes(x = as.factor(n), y = time / n, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time / n") + theme_minimal()
ns <- seq(10000, 20000, by = 5000)
performance <- rbind(get_performance("list()", ns, setup(empty_list_set()), evaluate),
get_performance("linked list", ns, setup(empty_linked_list_set()), evaluate))
ggplot(performance, aes(x = as.factor(n), y = time / n, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time / n") + theme_minimal()
ns <- seq(10000, 50000, by = 5000)
performance <- rbind(get_performance("list()", ns, setup(empty_list_set()), evaluate),
get_performance("linked list", ns, setup(empty_linked_list_set()), evaluate))
ggplot(performance, aes(x = as.factor(n), y = time / n, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time / n") + theme_minimal()
ns <- seq(10000, 50000, by = 10000)
performance <- rbind(get_performance("linked list", ns, setup(empty_linked_list_set()), evaluate),
get_performance("list()", ns, setup(empty_list_set()), evaluate))
ggplot(performance, aes(x = as.factor(n), y = time / n, fill = algo)) +
geom_boxplot() +
scale_fill_grey("Data structure") + #scale_color_discrete() +
xlab(quote(n)) + ylab("Time / n") + theme_minimal()
ggsave("set-comparison-member-div-n.pdf", width = 15, height = 10, units = "cm")
ggsave("set-comparison-member-div-n.png", width = 15, height = 10, units = "cm")
source('~/Dropbox/Misc. writing/Books/Advanced Statistical Programming in R/Functional Data Structures in R/R/list-set.R', echo=TRUE)
source('~/Dropbox/Misc. writing/Books/Advanced Statistical Programming in R/Functional Data Structures in R/R/list-set.R', echo=TRUE)
insert <- function(set, elem) UseMethod("insert")
member <- function(set, elem) UseMethod("member")
empty_list_set <- function() {
structure(c(), class = "list_set")
}
insert.list_set <- function(set, elem) {
structure(c(elem, set), class = "list_set")
}
member.list_set <- function(set, elem) {
elem %in% set
}
s <- empty_list_set()
member(s, 1)
s <- insert(s, 1)
member(s, 1)
is_empty <- function(x) UseMethod("is_empty")
linked_list_cons <- function(head, tail) {
structure(list(head = head, tail = tail),
class = "linked_list_set")
}
linked_list_nil <- linked_list_cons(NA, NULL)
empty_linked_list_set <- function() linked_list_nil
is_empty.linked_list_set <- function(x) pryr::address(x) == pryr::address(linked_list_nil)
insert.linked_list_set <- function(set, elem) {
linked_list_cons(elem, set)
}
member.linked_list_set <- function(set, elem) {
while (!is_empty(set)) {
if (set$head == elem) return(TRUE)
set <- set$tail
}
return(FALSE)
}
s <- empty_linked_list_set()
member(s, 1)
s <- insert(s, 1)
member(s, 1)
s <- insert(s, 2)
member(s, 2)
setup <- function(empty) function(n) empty
evaluate <- function(n, empty) {
set <- empty
elements <- sample(1:n)
for (elm in elements) {
set <- insert(set, elm)
}
}
insert <- function(set, elem) UseMethod("insert")
member <- function(set, elem) UseMethod("member")
empty_list_set <- function() {
structure(c(), class = "list_set")
}
insert.list_set <- function(set, elem) {
structure(c(elem, set), class = "list_set")
}
member.list_set <- function(set, elem) {
elem %in% set
}
s <- empty_list_set()
member(s, 1)
s <- insert(s, 1)
member(s, 1)
is_empty <- function(x) UseMethod("is_empty")
linked_list_cons <- function(head, tail) {
structure(list(head = head, tail = tail),
class = "linked_list_set")
}
linked_list_nil <- linked_list_cons(NA, NULL)
empty_linked_list_set <- function() linked_list_nil
is_empty.linked_list_set <- function(x) pryr::address(x) == pryr::address(linked_list_nil)
insert.linked_list_set <- function(set, elem) {
linked_list_cons(elem, set)
}
member.linked_list_set <- function(set, elem) {
while (!is_empty(set)) {
if (set$head == elem) return(TRUE)
set <- set$tail
}
return(FALSE)
}
s <- empty_linked_list_set()
member(s, 1)
s <- insert(s, 1)
member(s, 1)
s <- insert(s, 2)
member(s, 2)
setup <- function(empty) function(n) empty
evaluate <- function(n, empty) {
set <- empty
elements <- sample(1:n)
for (elm in elements) {
set <- insert(set, elm)
}
}
s <- empty_linked_list_set()
member(s, 1)
linked_list_cons <- function(head, tail) {
structure(list(head = head, tail = tail),
class = "linked_list_set")
}
linked_list_nil <- linked_list_cons(NA, NULL)
address(linked_list_nil)
pryr::address(linked_list_nil)
pryr::address(empty_linked_list_set())
pryr::address((x <- empty_linked_list_set()))
pryr::address((x <- empty_linked_list_set()))
x <- empty_linked_list_set()
pryr::address(x)
is_empty(x)
pryr::address(x)
pryr::address(linked_list_nil)
pryr::address(linked_list_nil) == pryr::address(x)
is_empty.linked_list_set <- function(x) identical(x, linked_list_nil)
